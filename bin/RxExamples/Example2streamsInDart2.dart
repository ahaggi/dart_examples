import 'dart:async';
//https://www.burkharts.net/apps/blog/fundamentals-of-dart-streams/

main(List<String> arguments) async {
  ui_function();
}

class API {
  API() {
    generateData();
  }
  int _counter = 0;
  StreamController<int> _streamController = StreamController();

  //here you can see a very typical pattern: Instead of publishing the whole StreamController, we just publish its Stream property.
  Stream<int> get counterStream => _streamController.stream;

  void generateData() async {
    for (var i = 0; i < 10; i++) {
        await Future.delayed(Duration(milliseconds: 500));
      ++_counter;
      _streamController.add(_counter);
    }
  }

  void increamentCounter() {
    ++_counter;
    _streamController.add(_counter);
  }
}

void ui_function() async {
  API api = API();

  api.counterStream.listen((data) => print(data));

  // Assume the next part is generated by an event from FloatingActionButton for example
  await Future.delayed(Duration(seconds: 10));
  print("After waiting..");

  api.increamentCounter();
}
